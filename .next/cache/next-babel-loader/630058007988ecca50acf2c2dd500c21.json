{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skukr\\\\Desktop\\\\redcarpet\\\\stackoverflow-react-next\\\\components\\\\QuestionDetail.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport questionData from \"../data/questionsData\";\nimport Answer from \"./Answer\";\n\nclass QuestionDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null,\n      answerCount: 0\n    });\n  }\n\n  render() {\n    const {\n      data,\n      answerCount\n    } = this.state;\n    return __jsx(React.Fragment, null, data ? __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, data.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, data.body), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Total Answers : \", answerCount), data.answers.map(ans => __jsx(Answer, {\n      data: ans,\n      key: ans.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }))) : __jsx(\"div\", {\n      className: \"center text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nQuestionDetail.getinitialProps = async function () {\n  console.log('HI');\n  const question = questionData.filter(item => item.id === parseInt(this.props.questionId))[0];\n  this.setState({\n    data: question,\n    answerCount: question.answers.length\n  });\n};\n\nexport default QuestionDetail;","map":{"version":3,"sources":["C:/Users/skukr/Desktop/redcarpet/stackoverflow-react-next/components/QuestionDetail.js"],"names":["React","Component","Spinner","questionData","Answer","QuestionDetail","data","answerCount","render","state","title","body","answers","map","ans","id","getinitialProps","console","log","question","filter","item","parseInt","props","questionId","setState","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNK,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,WAAW,EAAE;AAFP,KAD6B;AAAA;;AAKrCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,KAAKE,KAAnC;AACA,WACE,4BACGH,IAAI,GACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACI,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAI,CAACK,IAAT,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoBJ,WAApB,CAHF,EAIGD,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAkBC,GAAD,IAChB,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,GAAd;AAAmB,MAAA,GAAG,EAAEA,GAAG,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADG,GAUH;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXJ,CADF;AAkBD;;AAzBoC;;AA4BvCV,cAAc,CAACW,eAAf,GAAiC,kBAAkB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACF,QAAMC,QAAQ,GAAGhB,YAAY,CAACiB,MAAb,CACdC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYO,QAAQ,CAAC,KAAKC,KAAL,CAAWC,UAAZ,CADf,EAEf,CAFe,CAAjB;AAIA,OAAKC,QAAL,CAAc;AACZnB,IAAAA,IAAI,EAAEa,QADM;AAEZZ,IAAAA,WAAW,EAAEY,QAAQ,CAACP,OAAT,CAAiBc;AAFlB,GAAd;AAID,CAVD;;AAYA,eAAerB,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport questionData from \"../data/questionsData\";\r\nimport Answer from \"./Answer\";\r\n\r\nclass QuestionDetail extends Component {\r\n  state = {\r\n    data: null,\r\n    answerCount: 0,\r\n  };\r\n  render() {\r\n    const { data, answerCount } = this.state;\r\n    return (\r\n      <>\r\n        {data ? (\r\n          <div className=\"container\">\r\n            <h1>{data.title}</h1>\r\n            <p>{data.body}</p>\r\n            <p>Total Answers : {answerCount}</p>\r\n            {data.answers.map((ans) => (\r\n              <Answer data={ans} key={ans.id} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"center text-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nQuestionDetail.getinitialProps = async function () {\r\n    console.log('HI')\r\n  const question = questionData.filter(\r\n    (item) => item.id === parseInt(this.props.questionId)\r\n  )[0];\r\n\r\n  this.setState({\r\n    data: question,\r\n    answerCount: question.answers.length,\r\n  });\r\n};\r\n\r\nexport default QuestionDetail;\r\n"]},"metadata":{},"sourceType":"module"}