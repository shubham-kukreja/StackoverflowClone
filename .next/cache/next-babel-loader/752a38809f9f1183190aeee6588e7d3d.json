{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skukr\\\\Desktop\\\\redcarpet\\\\stackoverflow-react-next\\\\components\\\\QuestionDetail.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport questionData from \"../data/questionsData\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Answer from \"./Answer\";\n\nclass QuestionDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null\n    });\n  }\n\n  componentDidlMount() {\n    const question = questionData.filter(item => item.id === parseInt(this.props.questionId))[0];\n    this.setState({\n      data: question\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return __jsx(React.Fragment, null, data ? __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, data.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, data.body), data.answers.map(ans => {\n      __jsx(Answer, {\n        data: ans,\n        key: ans.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      });\n    })) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default QuestionDetail;","map":{"version":3,"sources":["C:/Users/skukr/Desktop/redcarpet/stackoverflow-react-next/components/QuestionDetail.js"],"names":["React","Component","questionData","Jumbotron","Answer","QuestionDetail","data","componentDidlMount","question","filter","item","id","parseInt","props","questionId","setState","console","log","state","render","title","body","answers","map","ans"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNK,MAAAA,IAAI,EAAE;AADA,KAD6B;AAAA;;AAIrCC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,QAAQ,GAAGN,YAAY,CAACO,MAAb,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,UAAZ,CADf,EAEf,CAFe,CAAjB;AAGA,SAAKC,QAAL,CAAc;AACZT,MAAAA,IAAI,EAAEE;AADM,KAAd;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACb,MAAAA;AAAD,QAAS,KAAKY,KAApB;AACF,WACE,4BACGZ,IAAI,GACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACc,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAId,IAAI,CAACe,IAAT,CAFF,EAGGf,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAkBC,GAAD,IAAS;AACvB,YAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA,GAAd;AAAmB,QAAA,GAAG,EAAEA,GAAG,CAACb,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFA,CAHH,CADG,GASH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CADF;AAeD;;AA9BoC;;AAiCvC,eAAeN,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport questionData from \"../data/questionsData\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Answer from \"./Answer\";\r\n\r\nclass QuestionDetail extends Component {\r\n  state = {\r\n    data: null,\r\n  };\r\n  componentDidlMount() {\r\n    const question = questionData.filter(\r\n      (item) => item.id === parseInt(this.props.questionId)\r\n    )[0];\r\n    this.setState({\r\n      data: question,\r\n    });\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n      const {data} = this.state\r\n    return (\r\n      <>\r\n        {data ? (\r\n          <div className=\"container\">\r\n            <h1>{data.title}</h1>\r\n            <p>{data.body}</p>\r\n            {data.answers.map((ans) => {\r\n                <Answer data={ans} key={ans.id}/>\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionDetail;\r\n"]},"metadata":{},"sourceType":"module"}