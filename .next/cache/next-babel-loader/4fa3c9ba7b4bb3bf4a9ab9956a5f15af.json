{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\skukr\\\\Desktop\\\\redcarpet\\\\stackoverflow-react-next\\\\components\\\\QuestionDetail.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport questionData from \"../data/questionsData\";\nimport Answer from \"./Answer\";\nimport PostAnswer from \"./PostAnswer\";\n\nvar QuestionDetail = /*#__PURE__*/function (_Component) {\n  _inherits(QuestionDetail, _Component);\n\n  var _super = _createSuper(QuestionDetail);\n\n  function QuestionDetail() {\n    var _this;\n\n    _classCallCheck(this, QuestionDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: null,\n      answerCount: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(QuestionDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var question = questionData.filter(function (item) {\n        return item.id === parseInt(_this2.props.questionId);\n      })[0];\n      this.setState({\n        data: question,\n        answerCount: question.answers.length\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          answerCount = _this$state.answerCount;\n      return __jsx(React.Fragment, null, __jsx(PostAnswer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return QuestionDetail;\n}(Component);\n\nexport default QuestionDetail;","map":{"version":3,"sources":["C:/Users/skukr/Desktop/redcarpet/stackoverflow-react-next/components/QuestionDetail.js"],"names":["React","Component","Spinner","questionData","Answer","PostAnswer","QuestionDetail","data","answerCount","question","filter","item","id","parseInt","props","questionId","setState","answers","length","state"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,c;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,WAAW,EAAE;AAFP,K;;;;;;;wCAIY;AAAA;;AAClB,UAAMC,QAAQ,GAAGN,YAAY,CAACO,MAAb,CACf,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAAC,MAAI,CAACC,KAAL,CAAWC,UAAZ,CAA9B;AAAA,OADe,EAEf,CAFe,CAAjB;AAIA,WAAKC,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAEE,QADM;AAEZD,QAAAA,WAAW,EAAEC,QAAQ,CAACQ,OAAT,CAAiBC;AAFlB,OAAd;AAID;;;6BACQ;AAAA,wBACuB,KAAKC,KAD5B;AAAA,UACCZ,IADD,eACCA,IADD;AAAA,UACOC,WADP,eACOA,WADP;AAEP,aACE,4BAeE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,CADF;AAmBD;;;;EApC0BP,S;;AAuC7B,eAAeK,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport questionData from \"../data/questionsData\";\r\nimport Answer from \"./Answer\";\r\nimport PostAnswer from \"./PostAnswer\";\r\n\r\nclass QuestionDetail extends Component {\r\n  state = {\r\n    data: null,\r\n    answerCount: 0,\r\n  };\r\n  componentDidMount() {\r\n    const question = questionData.filter(\r\n      (item) => item.id === parseInt(this.props.questionId)\r\n    )[0];\r\n\r\n    this.setState({\r\n      data: question,\r\n      answerCount: question.answers.length,\r\n    });\r\n  }\r\n  render() {\r\n    const { data, answerCount } = this.state;\r\n    return (\r\n      <>\r\n        {/* {data ? (\r\n          <div className=\"container\">\r\n            <h1>{data.title}</h1>\r\n            <p>{data.body}</p>\r\n            <p>Total Answers : {answerCount}</p>\r\n            {data.answers.map((ans) => (\r\n              <Answer data={ans} key={ans.id} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"center text-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        )} */}\r\n        <PostAnswer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionDetail;\r\n"]},"metadata":{},"sourceType":"module"}