{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skukr\\\\Desktop\\\\redcarpet\\\\stackoverflow-react-next\\\\components\\\\QuestionDetail.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport questionData from \"../data/questionsData\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nclass QuestionDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null\n    });\n  }\n\n  componentWillMount() {\n    const question = questionData.filter(item => item.id === parseInt(this.props.questionId))[0];\n    this.setState({\n      data: question\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Jumbotron, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, this.state.data.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, this.state.data.body)));\n  }\n\n}\n\nexport default QuestionDetail;","map":{"version":3,"sources":["C:/Users/skukr/Desktop/redcarpet/stackoverflow-react-next/components/QuestionDetail.js"],"names":["React","Component","questionData","Jumbotron","QuestionDetail","data","componentWillMount","question","filter","item","id","parseInt","props","questionId","setState","console","log","state","render","title","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNI,MAAAA,IAAI,EAAE;AADA,KAD6B;AAAA;;AAIrCC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,QAAQ,GAAGL,YAAY,CAACM,MAAb,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,UAAZ,CADf,EAEf,CAFe,CAAjB;AAGA,SAAKC,QAAL,CAAc;AACZT,MAAAA,IAAI,EAAEE;AADM,KAAd;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,4BACE,MAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWZ,IAAX,CAAgBc,KAArB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWZ,IAAX,CAAgBe,IAApB,CAFJ,CADF,CADF;AAQD;;AAtBoC;;AAyBvC,eAAehB,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport questionData from \"../data/questionsData\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nclass QuestionDetail extends Component {\r\n  state = {\r\n    data: null,\r\n  };\r\n  componentWillMount() {\r\n    const question = questionData.filter(\r\n      (item) => item.id === parseInt(this.props.questionId)\r\n    )[0];\r\n    this.setState({\r\n      data: question,\r\n    });\r\n    console.log(this.state)\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Jumbotron fluid>\r\n            <h1>{this.state.data.title}</h1>\r\n            <p>{this.state.data.body}</p>\r\n        </Jumbotron>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionDetail;\r\n"]},"metadata":{},"sourceType":"module"}