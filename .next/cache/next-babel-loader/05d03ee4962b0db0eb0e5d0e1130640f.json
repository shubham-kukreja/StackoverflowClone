{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport questionData from \"../data/questionsData\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass QuestionDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null\n    });\n  }\n\n  componentDidMount() {\n    const question = questionData.filter(item => item.id === parseInt(this.props.questionId))[0];\n    this.setState({\n      data: question\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, \"Question Detail Componenet\");\n  }\n\n}\n\nexport default QuestionDetail;","map":{"version":3,"sources":["C:/Users/skukr/Desktop/redcarpet/stackoverflow-react-next/components/QuestionDetail.js"],"names":["React","Component","questionData","Jumbotron","QuestionDetail","data","componentDidMount","question","filter","item","id","parseInt","props","questionId","setState","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNI,MAAAA,IAAI,EAAE;AADA,KAD6B;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAGL,YAAY,CAACM,MAAb,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,UAAZ,CADf,EAEf,CAFe,CAAjB;AAGA,SAAKC,QAAL,CAAc;AACZT,MAAAA,IAAI,EAAEE;AADM,KAAd;AAGD;;AACDQ,EAAAA,MAAM,GAAG;AACP,WAAQ,yDAAR;AACD;;AAdoC;;AAiBvC,eAAeX,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport questionData from \"../data/questionsData\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\nclass QuestionDetail extends Component {\r\n  state = {\r\n    data: null,\r\n  };\r\n  componentDidMount() {\r\n    const question = questionData.filter(\r\n      (item) => item.id === parseInt(this.props.questionId)\r\n    )[0];\r\n    this.setState({\r\n      data: question,\r\n    });\r\n  }\r\n  render() {\r\n    return (<>Question Detail Componenet</>);\r\n  }\r\n}\r\n\r\nexport default QuestionDetail;\r\n"]},"metadata":{},"sourceType":"module"}