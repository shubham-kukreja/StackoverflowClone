{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skukr\\\\Desktop\\\\redcarpet\\\\stackoverflow-react-next\\\\components\\\\QuestionDetail.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport questionData from \"../data/questionsData\";\nimport Answer from \"./Answer\";\nimport PostAnswer from \"./PostAnswer\";\n\nclass QuestionDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null,\n      answerCount: 0\n    });\n  }\n\n  componentDidMount() {\n    const question = questionData.filter(item => item.id === parseInt(this.props.questionId))[0];\n    this.setState({\n      data: question,\n      answerCount: question.answers.length\n    });\n  }\n\n  render() {\n    const {\n      data,\n      answerCount\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(PostAnswer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default QuestionDetail;","map":{"version":3,"sources":["C:/Users/skukr/Desktop/redcarpet/stackoverflow-react-next/components/QuestionDetail.js"],"names":["React","Component","Spinner","questionData","Answer","PostAnswer","QuestionDetail","data","answerCount","componentDidMount","question","filter","item","id","parseInt","props","questionId","setState","answers","length","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNM,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,WAAW,EAAE;AAFP,KAD6B;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAGP,YAAY,CAACQ,MAAb,CACdC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,UAAZ,CADf,EAEf,CAFe,CAAjB;AAIA,SAAKC,QAAL,CAAc;AACZV,MAAAA,IAAI,EAAEG,QADM;AAEZF,MAAAA,WAAW,EAAEE,QAAQ,CAACQ,OAAT,CAAiBC;AAFlB,KAAd;AAID;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,KAAKa,KAAnC;AACA,WACE,4BAeE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AApCoC;;AAuCvC,eAAef,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport questionData from \"../data/questionsData\";\r\nimport Answer from \"./Answer\";\r\nimport PostAnswer from \"./PostAnswer\";\r\n\r\nclass QuestionDetail extends Component {\r\n  state = {\r\n    data: null,\r\n    answerCount: 0,\r\n  };\r\n  componentDidMount() {\r\n    const question = questionData.filter(\r\n      (item) => item.id === parseInt(this.props.questionId)\r\n    )[0];\r\n\r\n    this.setState({\r\n      data: question,\r\n      answerCount: question.answers.length,\r\n    });\r\n  }\r\n  render() {\r\n    const { data, answerCount } = this.state;\r\n    return (\r\n      <>\r\n        {/* {data ? (\r\n          <div className=\"container\">\r\n            <h1>{data.title}</h1>\r\n            <p>{data.body}</p>\r\n            <p>Total Answers : {answerCount}</p>\r\n            {data.answers.map((ans) => (\r\n              <Answer data={ans} key={ans.id} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"center text-center\">\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        )} */}\r\n        <PostAnswer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionDetail;\r\n"]},"metadata":{},"sourceType":"module"}